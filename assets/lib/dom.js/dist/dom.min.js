window.dom={imports:{import(deps){for(var depName in deps)this[depName]=deps[depName]}},addRisingParticles(targetNode){if(!targetNode.querySelector("[id*=particles]")){let particlesDivsContainer=document.createElement("div");particlesDivsContainer.style.cssText="position: absolute ; top: 0 ; left: 0 ;height: 100% ; width: 100% ; border-radius: 15px ; overflow: clip ;z-index: -1",["sm","med","lg"].forEach(particleSize=>{var particlesDiv=document.createElement("div");particlesDiv.id=this.imports.config?.bgAnimationsDisabled?`particles-${particleSize}-off`:`${"dark"==(this.imports.env?.ui?.scheme||this.imports.env?.ui?.app?.scheme)?"white":"gray"}-particles-`+particleSize,particlesDivsContainer.append(particlesDiv)}),targetNode.prepend(particlesDivsContainer)}},create:{anchor(linkHref,displayContent,attrs={}){let anchor=document.createElement("a"),defaultAttrs={href:linkHref,target:"_blank",rel:"noopener"},finalAttrs={...defaultAttrs,...attrs};return Object.entries(finalAttrs).forEach(([attr,value])=>anchor.setAttribute(attr,value)),displayContent&&anchor.append(displayContent),anchor},elem(elemType,attrs={}){var attr,elem=document.createElement(elemType);for(attr in attrs)elem.setAttribute(attr,attrs[attr]);return elem},style(content){var style=document.createElement("style");return content&&(style.innerText=content),style},svgElem(type,attrs){var attr,elem=document.createElementNS("http://www.w3.org/2000/svg",type);for(attr in attrs)elem.setAttributeNS(null,attr,attrs[attr]);return elem}},cssSelectorize(classList){return classList.toString().replace(/([:[\]\\])/g,"\\$1").replace(/^| /g,".")},get:{computedWidth(...elems){let totalWidth=0;return elems.map(arg=>arg instanceof NodeList?[...arg]:arg).flat().forEach(elem=>{var elemStyle;elem instanceof Element&&"none"!=(elemStyle=getComputedStyle(elem)).display&&(totalWidth+=elem.getBoundingClientRect().width+parseFloat(elemStyle.marginLeft)+parseFloat(elemStyle.marginRight))}),totalWidth},loadedElem(selector,timeout=null){var timeoutPromise=timeout?new Promise(resolve=>setTimeout(()=>resolve(null),timeout)):null,isLoadedPromise=new Promise(resolve=>{var elem=document.querySelector(selector);elem?resolve(elem):new MutationObserver((_,obs)=>{var elem=document.querySelector(selector);elem&&(obs.disconnect(),resolve(elem))}).observe(document.documentElement,{childList:!0,subtree:!0})});return timeoutPromise?Promise.race([isLoadedPromise,timeoutPromise]):isLoadedPromise}}};